name: Tests

on:
    push:
        branches: [ 'main' ]
    pull_request:
        branches: [ '*' ]

permissions:
    # allow issuing OIDC tokens, needed for the depot.dev auth
    id-token: write
    # allow at least reading the repo contents, add other permissions if necessary
    contents: read

jobs:

    tests:
        name: Build and tests PHP ${{ matrix.php_version }}
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php_version: ['80', '81', '82']
        steps:
            -   uses: actions/checkout@v3

            # See https://stackoverflow.com/questions/70312490/github-actions-runner-environment-doesnt-build-for-arm-images
            -   name: Set up QEMU to run ARM images (that were built with Depot)
                uses: docker/setup-qemu-action@v2

            -   uses: depot/setup-action@v1
            -   uses: docker/setup-buildx-action@v2

            # We use this action instead of running `make docker-images-php-XX` directly because it lets us
            # use OIDC authentication instead of a secret. Secrets can't be used in pull request builds.
            -   name: Build Docker images
                uses: depot/bake-action@v1
                with:
                    load: true
                    # If this is a third-party pull request, fall back to the local buildx builder
                    buildx-fallback: ${{ github.event.pull_request.head.repo.full_name != github.repository }}
                env:
                    PHP_VERSION: ${{ matrix.php_version }}

            -   name: Test that layers can be exported
                run: |
                    make layer-php-${{ matrix.php_version }}
                    make layer-php-${{ matrix.php_version }}-fpm

            -   name: Test that the "console" layer can be exported
                run: make layer-console
                if: ${{ matrix.php_version == 80 }}

            -   name: Run tests
                run: make test-${{ matrix.php_version }}
